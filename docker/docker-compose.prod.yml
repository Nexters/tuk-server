services:
  api:
    container_name: tuk-api
    image: ${NCP_CONTAINER_REGISTRY_API}/tuk-api:${IMAGE_TAG}
    restart: always
    ports:
      - "80:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      MYSQL_USERNAME: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      JWT_SECRET: ${JWT_SECRET}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      APPLE_CLIENT_ID: ${APPLE_CLIENT_ID}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      ENCODED_FIREBASE_ADMIN_SDK: ${ENCODED_FIREBASE_ADMIN_SDK}
    depends_on:
      - mysql
      - redis
    networks:
      - tuk-network
  mysql:
    image: mysql:8.0.39
    container_name: tuk-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: tuk_db
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    networks:
      - tuk-network

  redis:
    image: redis:7.2-alpine
    container_name: tuk-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - tuk-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  tuk-network:
    driver: bridge